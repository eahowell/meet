{"version":3,"file":"static/js/567.2c220541.chunk.js","mappings":"+NAcA,MA0GA,EA1GwBA,IAA+B,IAA9B,OAAEC,EAAM,aAAEC,GAAcF,EAC/C,MAAM,WAAEG,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3BC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE3BC,GAAUC,EAAAA,EAAAA,UAAQ,KACtB,IACGC,MAAMC,QAAQV,KACdS,MAAMC,QAAQX,IACS,IAAxBC,EAAaW,QACK,IAAlBZ,EAAOY,OAEP,MAAO,GAST,OAPkBX,EAAaY,KAAKC,IAClC,MAAMC,EAAQf,EAAOgB,QAClBC,GAAUA,EAAMH,WAAaA,IAC9BF,OAEF,MAAO,CAAEM,KADIJ,EAASK,MAAM,UAAU,GACvBJ,QAAO,GAER,GACf,CAACd,EAAcD,KAElBoB,EAAAA,EAAAA,YAAU,KACRd,EAAQE,EAAQ,GACf,CAACA,IAEJ,MAAMa,EAAkBC,IAAwB,IAAvB,EAAEC,EAAC,EAAEC,EAAC,QAAEC,GAASH,EACxC,OACEI,EAAAA,EAAAA,KAAA,KAAGC,UAAW,aAAaJ,KAAKC,KAAKI,UACnCF,EAAAA,EAAAA,KAAA,QACEH,EAAG,EACHC,EAAG,EACHK,GAAI,GACJC,WAAW,QACXC,OAAQ7B,EAAa,UAAY,OACjCyB,UAAU,aACV,cAAa,cAAcF,EAAQO,QACnCC,UAAU,gEAA+DL,SAExEH,EAAQO,SAET,EAIR,OAAoB,IAAhB3B,EAAKO,QACAc,EAAAA,EAAAA,KAAA,OAAAE,SAAK,iCAGZF,EAAAA,EAAAA,KAAA,OAAK,cAAY,eAAcE,UAC/BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAmB,CAACC,MAAM,MAAMC,OAAQ,IAAIR,UAC3CS,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXC,KAAK,oBAELC,MAAO,CACLC,gBAAiBvC,EAAa,UAAY,WAE5CwC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,MAAO,IACPlB,SAAA,EAEFF,EAAAA,EAAAA,KAACqB,EAAAA,EAAa,CAAChB,OAAQ7B,EAAa,UAAY,UAChDwB,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJC,KAAK,WACLC,QAAQ,OACRC,KAAK,OACLC,MAAM1B,EAAAA,EAAAA,KAACL,EAAe,IACtBgC,SAAU,EACVtB,OAAQ7B,EAAa,UAAY,UAEnCwB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CACJL,KAAK,SACLC,QAAQ,QACRC,KAAK,mBACLI,eAAe,EACfxB,OAAQ7B,EAAa,UAAY,OACjCsD,MAAO,CACLxB,MAAO,mBACPyB,OAAQ,GACRC,SAAU,SACVC,KAAMzD,EAAa,UAAY,WAGnCwB,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CACNC,OAAQ,CAAEC,gBAAiB,OAC3BC,aAAc,CACZtB,gBAAiBvC,EAAa,UAAY,OAC1C8D,MAAO9D,EAAa,UAAY,OAChC+D,OAAQ,cAAa/D,EAAa,UAAY,YAGlDwB,EAAAA,EAAAA,KAACwC,EAAAA,EAAO,CACNf,KAAK,iBACL9C,KAAMA,EACNsD,KAAMzD,EAAa,UAAY,kBAI/B,C","sources":["components/CityEventsChart.js"],"sourcesContent":["// src/components/CityEventsChart.js\r\n\r\nimport React, { useState, useEffect, useMemo, useContext } from \"react\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nconst CityEventsChart = ({ events, allLocations }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getData = useMemo(() => {\r\n    if (\r\n      !Array.isArray(allLocations) ||\r\n      !Array.isArray(events) ||\r\n      allLocations.length === 0 ||\r\n      events.length === 0\r\n    ) {\r\n      return [];\r\n    }\r\n    const chartData = allLocations.map((location) => {\r\n      const count = events.filter(\r\n        (event) => event.location === location\r\n      ).length;\r\n      const city = location.split(/, | - /)[0];\r\n      return { city, count };\r\n    });\r\n    return chartData;\r\n  }, [allLocations, events]);\r\n\r\n  useEffect(() => {\r\n    setData(getData);\r\n  }, [getData]);\r\n\r\n  const CustomXAxisTick = ({ x, y, payload }) => {\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text\r\n          x={0}\r\n          y={0}\r\n          dy={16}\r\n          textAnchor=\"start\"\r\n          stroke={isDarkMode ? \"#ECF0F1\" : \"#333\"}\r\n          transform=\"rotate(45)\"\r\n          data-testid={`XAxislabel-${payload.value}`}\r\n          className=\"recharts-text recharts-cartesian-axis-tick-value x-axis-label\"\r\n        >\r\n          {payload.value}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return <div>No data available for chart</div>;\r\n  }\r\n  return (\r\n    <div data-testid=\"scatterChart\">\r\n    <ResponsiveContainer width=\"99%\" height={400} >\r\n      <ScatterChart\r\n        role=\"graphics-document\"\r\n        \r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#143B5F\" : \"#FFEEE6\",\r\n        }}\r\n        margin={{\r\n          top: 20,\r\n          right: 20,\r\n          bottom: 65,\r\n          left: -15,\r\n        }}\r\n      >\r\n        <CartesianGrid stroke={isDarkMode ? \"#495670\" : \"#ccc\"} />\r\n        <XAxis\r\n          type=\"category\"\r\n          dataKey=\"city\"\r\n          name=\"City\"\r\n          tick={<CustomXAxisTick />}\r\n          interval={0}\r\n          stroke={isDarkMode ? \"#ECF0F1\" : \"#333\"}\r\n        />\r\n        <YAxis\r\n          type=\"number\"\r\n          dataKey=\"count\"\r\n          name=\"Number of Events\"\r\n          allowDecimals={false}\r\n          stroke={isDarkMode ? \"#ECF0F1\" : \"#333\"}\r\n          label={{\r\n            value: \"Number of Events\",\r\n            angle: -90,\r\n            position: \"center\",\r\n            fill: isDarkMode ? \"#ECF0F1\" : \"#333\", \r\n          }}\r\n        />\r\n        <Tooltip\r\n          cursor={{ strokeDasharray: \"3 3\" }}\r\n          contentStyle={{\r\n            backgroundColor: isDarkMode ? \"#FFEEE6\" : \"#fff\",\r\n            color: isDarkMode ? \"#ECF0F1\" : \"#333\",\r\n            border: `1px solid ${isDarkMode ? \"#ECF0F1\" : \"#ccc\"}`,\r\n          }}\r\n        />\r\n        <Scatter\r\n          name=\"Events by City\"\r\n          data={data}\r\n          fill={isDarkMode ? \"#ECF0F1\" : \"#0F4BB8\"}\r\n        />\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default CityEventsChart;\r\n"],"names":["_ref","events","allLocations","isDarkMode","useContext","ThemeContext","data","setData","useState","getData","useMemo","Array","isArray","length","map","location","count","filter","event","city","split","useEffect","CustomXAxisTick","_ref2","x","y","payload","_jsx","transform","children","dy","textAnchor","stroke","value","className","ResponsiveContainer","width","height","_jsxs","ScatterChart","role","style","backgroundColor","margin","top","right","bottom","left","CartesianGrid","XAxis","type","dataKey","name","tick","interval","YAxis","allowDecimals","label","angle","position","fill","Tooltip","cursor","strokeDasharray","contentStyle","color","border","Scatter"],"sourceRoot":""}